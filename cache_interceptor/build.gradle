apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.pthomain'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules-lib.pro'
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        debug{
            minifyEnabled false
            multiDexEnabled true
        }

        release {
            minifyEnabled true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-lib.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/eclipse.inf'
        exclude 'META-INF/index.list'
        exclude 'META-INF/INDEX.LIST'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.force 'com.google.guava:guava:20.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation 'com.github.jitpack:gradle-simple:1.0'
    implementation "com.android.support:multidex:$multidexVersion"

    compileOnly "javax.annotation:jsr250-api:$jsr250Version"
    implementation "androidx.annotation:annotation:$supportLibVersion"

    api "com.github.pthomain:SharedPreferenceStore:$sharedPrefStoreVersion"
    api "com.github.pthomain:boilerplate:$boilerplateVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    api "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    api "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    implementation "org.apache.commons:commons-lang3:$apacheCommonsVersion"
    implementation "androidx.core:core:$supportLibVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "org.iq80.snappy:snappy:$snappyVersion"
    implementation "io.requery:sqlite-android:$requeryVersion"

    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    api "com.google.code.gson:gson:$gsonVersion"

    compileOnly "junit:junit:$jUnitVersion"
    compileOnly "org.mockito:mockito-core:$mockitoVersion"
    compileOnly "org.robolectric:robolectric:$robolectricVersion"
    compileOnly "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}

repositories {
    mavenCentral()
}

